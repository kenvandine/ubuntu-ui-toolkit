/*
 * Copyright 2014 Canonical Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; version 3.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*!
    \qmltype Page
    \inqmlmodule Ubuntu.Components 1.1
    \ingroup ubuntu
    \brief A page is the basic Item that must be used inside the \l MainView,
        \l PageStack and \l Tabs.
        Anchors and height of a Page are automatically determined to align with
        the header of the \l MainView, but can be overridden.

    \l MainView provides a header for Pages it includes.
    The text and actions of the header are determined by the \l title
    and \l head properties of the page:

    \qml
        import QtQuick 2.0
        import Ubuntu.Components 1.1

        MainView {
            width: units.gu(48)
            height: units.gu(60)

            Page {
                title: i18n.tr("Example page")

                Label {
                    anchors.centerIn: parent
                    text: i18n.tr("Hello world!")
                }

                head.actions: [
                    Action {
                        iconName: "search"
                        text: i18n.tr("Search")
                    },
                    Action {
                        iconName: "contacts"
                        text: i18n.tr("Contacts")
                    }
                ]
            }
        }
    \endqml
    See \l MainView for more examples on how to use the header.
    Advanced navigation structures can be created by adding Pages to a \l PageStack or \l Tabs.
*/

/*!
    \qmlproperty string Page::title
    The title of the page. Will be shown in the header of the \l MainView.
    If the page is used inside a \l Tab, the default title is the \l Tab title.
    For a Page not inside a \l Tab, the default title is an empty string.
 */

/*!
    \qmlproperty Item Page::tools
    \deprecated
    The toolbar items associated with this Page.
    DEPRECATED. Use \b head.actions instead.
 */

/*!
  \qmlproperty PageHeadConfiguration Page::head
  \readonly
  Configuration of the header for this page.
 */

/*!
    \qmlproperty Flickable Page::flickable
    Optional flickable that controls the header. This property
    is automatically set to the first child of the page that is Flickable
    and anchors to the top of the page or fills the page. For example:
    \qml
        import QtQuick 2.0
        import Ubuntu.Components 1.1

        MainView {
            width: units.gu(30)
            height: units.gu(50)
            Page {
                id: page
                title: "example"
                //flickable: null // uncomment for a fixed header
                Flickable {
                    id: content
                    anchors.fill: parent
                    contentHeight: units.gu(70)
                    Label {
                        text: "hello"
                        anchors.centerIn: parent
                    }
                }
            }
        }
    \endqml
    In this example, page.flickable will automatically be set to content because it is
    a Flickable and it fills its parent. Thus, scrolling down in the Flickable will automatically
    hide the header.

    Set this property to null to avoid automatic flickable detection, which disables hiding
    of the header by scrolling in the Flickable. In cases where a flickable should control the header,
    but it is not automatically detected, the flickable property can be set.
 */

/*!
    \qmlproperty list<Action> Page::actions
    Local actions. These actions will be made available outside the application
    (for example, to HUD) when the Page is active. For actions that are always available
    when the application is running, use the actions property of \l MainView.
    For actions in the header, see \l head.
*/
